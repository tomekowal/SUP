#!/bin/bash
echo "postinst $*"

VSN={{ vsn }}
REL={{ release }}
ERTS_VSN={{ erts_vsn }}
ERL_ROOT={{ target_root }}

NODERUN=$ERL_ROOT/bin/$REL
ERL=$ERL_ROOT/erts-$ERTS_VSN/bin/erl
ESCRIPT=$ERL_ROOT/erts-$ERTS_VSN/bin/escript
NODETOOL=$ERL_ROOT/erts-$ERTS_VSN/bin/nodetool

NAME_ARG=`egrep '^-s?name' $ERL_ROOT/etc/vm.args`
COOKIE_ARG=`grep '^-setcookie' $ERL_ROOT/etc/vm.args`

NODETOOL_RPC="$ESCRIPT $NODETOOL $NAME_ARG $COOKIE_ARG rpc"
ERL_NOSHELL="$ERL -noshell"

case "$1" in
    configure)

    # unpack release
    tar xzvf $ERL_ROOT/debian/releases/$REL -C $ERL_ROOT > /dev/null
    truncate -s 0 $ERL_ROOT/debian/releases/$REL

    if [ ! -f $ERL_ROOT/releases/start_erl.data ]; then
        echo "Initializing release..."
        echo "$ERTS_VSN $VSN" > $ERL_ROOT/releases/start_erl.data
        $ERL_NOSHELL -s sup_beagle_maintenance create_RELEASES $ERL_ROOT $REL $VSN halt

        echo "Starting node..."
        $NODERUN start
        exit $?
    fi

    OLDVSN=$2
    $NODERUN ping > /dev/null 2>&1
    UP=$?

    MANUAL=false
    if [ "$OLDVSN" -a \( $UP -eq 0 \) ]; then
        echo "Performing release upgrade..."
        $NODETOOL_RPC sup_beagle_maintenance upgrade_release $ERL_ROOT $REL $VSN

        if [ ! $? -eq 0 ]; then
            echo "Release upgrade failed. Stopping node..."
            $NODERUN stop
            MANUAL=true
        fi
    else
        MANUAL=true
    fi

    if [ $MANUAL = "true" ]; then
        echo "Performing manual upgrade..."
        echo "$ERTS_VSN $VSN" > $ERL_ROOT/releases/start_erl.data
        $ERL_NOSHELL -s sup_beagle_maintenance manual_upgrade $ERL_ROOT $REL $VSN $OLDVSN halt
        echo "Starting node $REL..."
        $NODERUN start
    fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
